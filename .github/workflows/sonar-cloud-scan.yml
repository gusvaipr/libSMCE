name: SonarCloud Scan
on:
  push:
    branches:
      - master
      - devel
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: SonarCloud Scan
    runs-on: windows-latest
    strategy:
      matrix:
        compiler:
          - name: MSVC
            c: cl
            cxx: cl
        boost:
          - version: 1.74.0
            slug: 1_74_0
            release: false
    env:
      SONAR_SCANNER_VERSION: 4.4.0.2170
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-windows.zip
        run: |
          New-Item -Force -ItemType directory -Path $HOME\.sonar
          curl -sSLo $HOME\.sonar\sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }}
          unzip -o $HOME\.sonar\sonar-scanner.zip -d $HOME\.sonar\
          echo "$HOME\.sonar\sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-windows\bin" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
      - name: Download and set up build-wrapper
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-win-x86.zip
        run: |
          curl -sSLo $HOME\.sonar\build-wrapper.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME\.sonar\build-wrapper.zip -d $HOME\.sonar\
          echo "$HOME\.sonar\build-wrapper-win-x86" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
      - run: mkdir C:\local
      - name: Cache Boost
        id: cache-boost
        uses: actions/cache@v2
        with:
          path: C:\local\boost_${{ matrix.boost.slug }}
          key: ${{ runner.os }}-boost-${{ matrix.boost.version }}-64bit
      - if: steps.cache-boost.outputs.cache-hit != 'true'
        shell: powershell
        run: .\ci\install-boost.ps1 '14.2' '${{ matrix.boost.version }}' '${{ matrix.boost.slug }}'
      - name: Check deps
        shell: bash
        run: |
          choco install ninja openssl > silence
          ninja --version
      - uses: ilammy/msvc-dev-cmd@v1
      - name: CMake configure
        run: |
          mkdir build
          cmake -G Ninja `
            -DBOOST_ROOT=C:\local\boost_${{ matrix.boost.slug }} `
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
            -DSMCE_CXXRT_LINKING=SHARED `
            -DSMCE_BOOST_LINKING=STATIC `
            -DSMCE_OPENSSL_LINKING=STATIC `
            -DCPACK_PACKAGE_DIRECTORY=packages `
            -S ./ -B ./build
      - name: Run build-wrapper
        run: |
          cmake -S . -B build
          build-wrapper-win-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build ./build
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"